// Generated by CoffeeScript 1.6.3
define(function(require, exports) {
  var animate, bend, local, renderer, size, stage, thing, update_cache;
  size = require('./size');
  bend = require('./bend');
  renderer = PIXI.autoDetectRenderer(size.w, size.h);
  stage = new PIXI.Stage(0xFFFFFF, true);
  $('#paper').append(renderer.view);
  thing = new PIXI.Graphics();
  stage.addChild(thing);
  local = {};
  local.points = [];
  local.caches = [];
  local.level = 6;
  animate = function() {
    var first;
    thing.clear();
    thing.lineStyle(1, 0x4444aa, 1);
    first = local.caches[0];
    if (first != null) {
      thing.moveTo(first.x, first.y);
    }
    local.caches.slice(1).forEach(function(point) {
      return thing.lineTo(point.x, point.y);
    });
    renderer.render(stage);
    return requestAnimationFrame(animate);
  };
  animate();
  exports.set_points = function(points) {
    local.points = points;
    return update_cache();
  };
  update_cache = function() {
    var tmp, _i, _ref, _results;
    tmp = local.points.concat();
    (function() {
      _results = [];
      for (var _i = 1, _ref = local.level; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).forEach(function() {
      return tmp = bend(tmp, local.points);
    });
    return local.caches = tmp;
  };
  $('#more').click(function() {
    local.level += 1;
    return update_cache();
  });
  $('#less').click(function() {
    if (local.level > 2) {
      local.level -= 1;
      return update_cache();
    }
  });
  return exports;
});

/*
//@ sourceMappingURL=render.map
*/
